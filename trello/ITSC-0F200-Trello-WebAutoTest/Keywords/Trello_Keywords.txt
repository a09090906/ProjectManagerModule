*** Settings ***
Library           SeleniumLibrary    30    3
Library           Collections
Library           String
Library           OperatingSystem
Resource          ../Variables/Trello_Variables.txt
Resource          ./Common_Keywords.txt

*** Keywords ***
Suite Setup
    [Documentation]    Setup for OCAIP test suite.
    ...    - Set Selenium operation dealy between each keyword.
    ...    - Update chrome web driver if needed.
    ...    - Set time stamp as prefix of various names for this test to prevent the same name from different tests.
    Set Library Search Order    OperatingSystem    SSHLibrary
    Set Selenium Speed    0.3 s
    Update Chromedriver
    Update IEDriverServer
    # Set up time stamp for this test run.
    ${Year}    ${Month}    ${Day}    ${Hour}    ${Min}    ${Second}=    Get Time
    ...    year,month,day,hour,min,sec
    Set Suite Variable    ${gTime prefix}    ${Year}${Month}${Day}${Hour}${Min}${Second}

Suite Teardown
    [Documentation]    Teardown for OCAIP test suite.
    ...
    ...    - Close all browsers in case there's still browser exists.
    ...    - Force killing chromedriver.exe process since it might still be there.
    Close All Browsers
    ${Output}=    Run    TASKKILL /IM chromedriver.exe /F
    Log    ${Output}

Customized Mouse Over
    [Arguments]    ${Locator}
    [Documentation]    Due to it's need time to finish mouse over visual effect, so we customized a mouse over keyword to delay next action.
    Mouse Over    ${Locator}
    Sleep    0.5 s

Open Trello
    [Arguments]    ${User account}=${gTest account}    ${User Password}=${gTest password}    ${Which Browser}=${gDefault browser}
    ${gOriginal browser ID}=    Open Browser    ${gTrello URL}    ${Which Browser}
    Set Suite Variable    ${gOriginal browser ID}
    Maximize Browser Window
    Comment    Login to SSO
    Login SSO
    Page Should Contain Element    class=MainMenu

Customized Click Element
    [Arguments]    ${Clicked Locator}
    [Documentation]    *Customized keyword for Click Element, will retry few times due to driver may fail due to temporarily unclickable.*
    Wait Until Keyword Succeeds    10 secs    1 secs    Click Element    ${Clicked Locator}

Create Project
    [Arguments]    ${Project title}    ${Project content}    ${Advanced setting}=${EMPTY}    ${Color setting}=${EMPTY}
    [Documentation]    Note:
    ...    - ${Advacend setting} and ${Color setting} is not working for now.
    Check If Project Does Not Exist In My Projects    ${Project title}    ${Project content}
    Click Element    //a[@name="addboardbtn"]
    # Fill info.
    Input Text    id=pro_title    ${Project title}
    Input Text    id=pro_text    ${Project content}
    Click Element    //div[@id="save"]/a[@onclick="tast()"]
    # Verify
    Comment    Alert Should Be Present    已新增
    ${Alert msg}=    Handle Alert
    ${Project guid}=    Check If Project Exists In My Projects    ${Project title}    ${Project content}
    [Return]    ${Project guid}    # A specific id for such project. <div guid="xxxxx">

Delete Project
    [Arguments]    ${Project title}    ${Project content}=${EMPTY}
    [Documentation]    Note:
    ...    - ${Advacend setting} and ${Color setting} is not working for now.
    ${Project guid}=    Check If Project Exists In My Projects    ${Project title}    ${Project content}
    ${Project location}=    Set Variable    //li[@guid="${Project guid}"]    #//ul[@id="monsortable"]//div[@class="inlineEditInput"]//font[text()="${Project title}"]
    Click Element    ${Project location}//a[@class="deleteboard"]
    Alert Should Be Present    是否要刪除!    ACCEPT
    Comment    Alert Should Be Present    已刪除
    ${Alert msg}=    Handle Alert
    # Verify
    Check If Project Does Not Exist In My Projects    ${Project title}    ${Project content}

Edit Project
    [Arguments]    ${Project title}    ${Project content}    ${New project title}=No change    ${New project content}=No change    ${Advanced setting}=${EMPTY}    ${Color setting}=${EMPTY}
    Run Keyword If    "${Color setting}" != "${EMPTY}"    Dictionary Should Contain Key    ${gProject color}    ${Color setting}    There's no such color "${Color setting}" in project.
    ${Project guid}=    Check If Project Exists In My Projects    ${Project title}    ${Project content}
    Click Element    //li[@guid="${Project guid}"]//a[@name="editbtn"]
    Run Keyword If    "${New project title}" != "No change"    Input Text    id=edit_title    ${New project title}
    Run Keyword If    "${New project content}" != "No change"    Input Text    id=edit_text    ${New project content}
    # Advanced Setting
    No Operation    # TBD
    # Color Setting
    Run Keyword If    "${Color setting}" != "${EMPTY}"    Click Element    //div[@id="div_color"]//span[@title="${Color setting}"]
    Run Keyword If    "${Color setting}" != "${EMPTY}"    Click Element    //div[@id="div_color"]//span[@title="${Color setting}" and @data-selected]    # Verify
    ${RGB color}=    Run Keyword If    "${Color setting}" != "${EMPTY}"    Get Element Attribute    //div[@id="div_color"]//span[@data-color="${gProject color.${Color setting}}"]    style    # Get rgb color (for ie usage)
    ${Match}    ${RGB color}=    Should Match Regexp    ${RGB color}    background-color: (.*)
    # Click OK
    Click Element    id=edit_save
    Comment    Alert Should Be Present    已編輯
    ${Alert msg}=    Handle Alert
    Run Keyword If    "${Color setting}" != "${EMPTY}"    Page Should Contain Element    //li[@guid="${Project guid}"]//li[@style="background:${gProject color.${Color setting}}" or @style="background: ${RGB color}"]    # Verify project content is with right color.

Check If Project Exists In My Projects
    [Arguments]    ${Project title}    ${Project content}
    ${Project title location}=    Set Variable    //ul[@id="monsortable"]//div[@class="inlineEditInput"]//font[text()="${Project title}"]
    ${Project content location}=    Set Variable    ${Project title location}/../../../../ul/li/div[contains(text(),"${Project content}...")]
    Page Should Contain Element    ${Project content location}
    ${Project guid}    Get Element Attribute    ${Project content location}    guid
    [Return]    ${Project guid}    # A specific id for such project

Check If Project Does Not Exist In My Projects
    [Arguments]    ${Project title}    ${Project content}
    ${Project title location}=    Set Variable    //ul[@id="monsortable"]//div[@class="inlineEditInput"]//font[text()="${Project title}"]
    ${Project content location}=    Set Variable    ${Project title location}/../../../../ul/li/div[contains(text(),"${Project content}...")]
    Page Should Not Contain Element    ${Project content location}

Go To Project
    [Arguments]    ${Project title}    ${Project content}
    ${Project guid}=    Check If Project Exists In My Projects    ${Project title}    ${Project content}
    Click Element    //div[@guid="${Project guid}"]    # project content
    Page Should Contain Element    id=addboardbtn1

Create Board
    [Arguments]    ${Board title}    ${Board content}
    Click Element    id=addboardbtn1
    Input Text    id=add_sub_title    ${Board title}
    Input Text    id=add_sub_text    ${Board content}
    Click Element    //div[@id="save_div"]/a[@name="save_btn"]
    Comment    Alert Should Be Present    已新增
    ${Alert msg}=    Handle Alert
    Page Should Contain Element    //ul[@id="monsortable"]/li[last()-1]//div[@class="inlineEditInput" and text()="${Board title}"]    # New created board will appear at last-1 position. (the last is "新增看板")
    ${Board guid}=    Get Element Attribute    //ul[@id="monsortable"]/li[last()-1]    guid
    [Return]    ${Board guid}    # Could be furhter usage, user can choose cautch this value or not.

Edit Board
    [Arguments]    ${Board title}    ${Board content}    ${Board guid if has}=${EMPTY}    ${New board title}=No change    ${New board content}=No change    ${Host}=No change
    ...    ${Start date}=No change    ${End date}=No change
    [Documentation]    Note
    ...    - Host Change: TBD
    ...    - Date Change: TBD
    ${Board location}=    Set Variable If    "${Board guid if has}" != "${EMPTY}"    //li[@guid="${Board guid if has}"]    //ul[@id="monsortable"]//div[@class="inlineEditInput" and text()="${Board title}"]/../../../..
    ${Edit mark location}=    Set Variable    ${Board location}//a[@name="editbtn"]
    Click Element    ${Edit mark location}
    Run Keyword If    "${New board title}" != "No change"    Input Text    id=add_sub_title    ${New board title}
    Run Keyword If    "${New board content}" != "No change"    Input Text    id=add_sub_text    ${New board content}
    # Host&Date Setting
    No Operation    # TBD
    # Click OK
    Click Element    id=edit_div
    Comment    Alert Should Be Present    已編輯
    ${Alert msg}=    Handle Alert
    # Verify
    Run Keyword If    "${New board title}" != "No change"    Page Should Contain Element    ${Board location}//div[@class="inlineEditInput" and text()="${New board title}"]
    ## Go back to edit to see if changed.
    Click Element    ${Edit mark location}
    ${source}=    Get Source
    Log    ${source}
    Run Keyword If    "${New board title}" != "No change"    Element Text Should Be    id=add_sub_title    ${New board title}
    Run Keyword If    "${New board content}" != "No change"    Element Text Should Be    id=add_sub_text    ${New board content}
    ### Host check TBD.
    ### Date check TBD.
    Click Element    //a[@class="genbtn closemagnificPopup" and text()="關閉"]

Delete Board
    [Arguments]    ${Board title}    ${Board guid if has}=${EMPTY}
    [Documentation]    *Note:*
    ...    - Due to the board title can be the same in a project, *it's not recommend using board title to identify the board you want to delete* (may choose wrong board), it's best to use the board guid.
    ${Board location}=    Set Variable If    "${Board guid if has}" != "${EMPTY}"    //li[@guid="${Board guid if has}"]    //ul[@id="monsortable"]//div[@class="inlineEditInput" and text()="${Board title}"]/../../../..
    ${Delete mark location}=    Set Variable    ${Board location}//a[@class="deleteboard"]
    Click Element    ${Delete mark location}
    Comment    Alert Should Be Present    已刪除
    ${Alert msg}=    Handle Alert
    Page Should Not Contain Element    ${Board location}

Go Back To Project List
    Click Element    //a[@href="trello_tast.aspx"]
    Page Should Contain Element    class=MainMenu

Create Card
    [Arguments]    ${Board title}    ${Card title}    ${Card content}    ${Board guid if has}=${EMPTY}
    [Documentation]    *Note:*
    ...    - Due to the board title can be the same in a project, *it's not recommend using board title to identify the board* (may choose wrong board), it's best to use the board guid.
    ${Board location}=    Set Variable If    "${Board guid if has}" != "${EMPTY}"    //li[@guid="${Board guid if has}"]    //ul[@id="monsortable"]//div[@class="inlineEditInput" and text()="${Board title}"]/../../../..
    ${Add card locator}=    Set Variable    ${Board location}//a[@class="addcardbtn"]
    Click Element    ${Add card locator}
    Input Text    id=card_title    ${Card title}
    Input Text    id=card_text    ${Card content}
    Click Element    id=save
    Comment    Alert Should Be Present    已新增
    ${Alert msg}=    Handle Alert
    Page Should Contain Element    ${Board location}//li[last()]
    ${Card guid}=    Get Element Attribute    ${Board location}//li[last()]    guid
    [Return]    ${Card guid}    # Could be furhter usage, user can choose cautch this value or not.

Delete Card
    [Arguments]    ${Board title}    ${Card title}    ${Board guid if has}=${EMPTY}    ${Card guid if has}=${EMPTY}
    [Documentation]    Note:
    ...    - If ${Board guid if has} is specified, then use it to identify the card, otherwise choose the first match of ${Board title}.
    ...    - If ${Card guid if has} is specified, then use it to identify the card, otherwise choose the first match of ${Card title}.
    ${Board location}=    Set Variable If    "${Board guid if has}" != "${EMPTY}"    //li[@guid="${Board guid if has}"]    //ul[@id="monsortable"]//div[@class="inlineEditInput" and text()="${Board title}"]/../../../..
    ${Card location}=    Set Variable If    "${Card guid if has}" != "${EMPTY}"    //li[@guid="${Card guid if has}"]    ${Board location}//li[@name="cardgid" and ./textarea[normalize-space(text())="${Card title}"]]    # Using normalize-space() to trim unexpected space from head or tail.
    ${Delete card location}=    Set Variable    ${Card location}//a[@class="deletecard"]
    Click Element    ${Delete card location}
    Comment    Alert Should Be Present    已刪除
    ${Alert msg}=    Handle Alert
    Page Should Not Contain Element    ${Card location}

Login SSO
    [Arguments]    ${SSO account}=${gTest account}    ${SSO password}=${gTest password}
    [Documentation]    Login SSO with Tester's account.
    ...
    ...    Use "--removekeywords TAG:NOLOG" in command option
    [Tags]    NOLOG
    Input Text    name=USER    ${SSO account}
    Input Password    id=pw    ${SSO password}
    Click Element    //input[@type="submit"]
